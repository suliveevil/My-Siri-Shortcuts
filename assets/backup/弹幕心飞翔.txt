<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>WFWorkflowActions</key>
	<array>
		<dict>
			<key>WFWorkflowActionIdentifier</key>
			<string>is.workflow.actions.comment</string>
			<key>WFWorkflowActionParameters</key>
			<dict>
				<key>WFCommentActionText</key>
				<string>作者：小米
来源：捷径盒 © 版权归作者所有
发布时间：2020-02-18 19:08
作品网址：https://jiejinghe.com/shortcuts/9085208251</string>
			</dict>
		</dict>
		<dict>
			<key>WFWorkflowActionIdentifier</key>
			<string>com.jiejinghe.luke.ShortcutUpdateCheckIntent</string>
			<key>WFWorkflowActionParameters</key>
			<dict>
				<key>UUID</key>
				<string>B193AD01-C98B-466E-87DE-DEAD0EC7F717</string>
				<key>versionInfo</key>
				<string>id:9085208251,v:26</string>
			</dict>
		</dict>
		<dict>
			<key>WFWorkflowActionIdentifier</key>
			<string>is.workflow.actions.repeat.count</string>
			<key>WFWorkflowActionParameters</key>
			<dict>
				<key>GroupingIdentifier</key>
				<string>554C9445-9E9D-4F06-B517-3F794D69B01A</string>
				<key>WFControlFlowMode</key>
				<integer>0</integer>
				<key>WFRepeatCount</key>
				<integer>88</integer>
			</dict>
		</dict>
		<dict>
			<key>WFWorkflowActionIdentifier</key>
			<string>is.workflow.actions.choosefrommenu</string>
			<key>WFWorkflowActionParameters</key>
			<dict>
				<key>GroupingIdentifier</key>
				<string>5672D10A-0A5D-4254-B941-346CC6BBAFF7</string>
				<key>WFControlFlowMode</key>
				<integer>0</integer>
				<key>WFMenuItems</key>
				<array>
					<string>开启弹幕</string>
					<string>开年大吉</string>
					<string>这个春节花呗免费陪你一起过</string>
				</array>
			</dict>
		</dict>
		<dict>
			<key>WFWorkflowActionIdentifier</key>
			<string>is.workflow.actions.choosefrommenu</string>
			<key>WFWorkflowActionParameters</key>
			<dict>
				<key>GroupingIdentifier</key>
				<string>5672D10A-0A5D-4254-B941-346CC6BBAFF7</string>
				<key>WFControlFlowMode</key>
				<integer>1</integer>
				<key>WFMenuItemTitle</key>
				<string>开启弹幕</string>
			</dict>
		</dict>
		<dict>
			<key>WFWorkflowActionIdentifier</key>
			<string>is.workflow.actions.gettext</string>
			<key>WFWorkflowActionParameters</key>
			<dict>
				<key>UUID</key>
				<string>4161C9F4-FC1C-48B6-AEFC-B4835B2E3C33</string>
				<key>WFTextActionText</key>
				<string>&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;

&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;meta name="viewport" content="width=device-width,initial-scale=1.0,maximum-scale=1.0,user-scalable=no"&gt;
    &lt;meta http-equiv="X-UA-Compatible" content="ie=edge"&gt;
    &lt;title&gt;弹幕神器&lt;/title&gt;
    &lt;script&gt;
        let text = ``;
        text = text.replace(/[\r\n]/g, '');
    &lt;/script&gt;
    &lt;style&gt;
        html,
        body {
            width: 100%;
            height: 100%;
            margin: 0;
            padding: 0;
            overflow: hidden;
            -webkit-tap-highlight-color: transparent;
            -webkit-overflow-scrolling: touch;
            font-family: "Avenir", Helvetica, Arial, sans-serif;
            -webkit-font-smoothing: antialiased;
        }

        .container {
            background: black;
            width: 100%;
            height: 100%;
            display: flex;
            justify-content: center;
            align-items: center;
            transition: background ease .3s;
            position: relative;

        }

        .text {
            margin: 0;
            padding: 0;
            color: white;
            font-size: 150px;
            white-space: nowrap;
            transition: color ease .3s;
            user-select: none;
            -webkit-user-select: none;
            transform: rotate(0.25turn);
        }


        @keyframes twinkling {
            from {
                opacity: 0.1;
            }

            to {
                opacity: 1;
            }
        }


        @keyframes marqueen {
            from {
                transform: rotate(0.25turn) translate3d(calc(50vh + 50%), 0, 0);
            }

            to {
                transform: rotate(0.25turn) translate3d(calc(-50vh - 50%), 0, 0);
            }
        }

        @keyframes marqueen-landscape {

            0% {
                transform: translate3d(calc(50vw + 50%), 0, 0);
            }

            100% {
                transform: translate3d(calc(-50vw - 50%), 0, 0);
            }
        }


        .settings {
            position: fixed;
            left: 0;
            border: 1px solid rgba(255, 255, 255, 0.1);
            border-bottom: none;
            bottom: 0;
            margin: 0 auto;
            right: 0;
            max-width: 500px;
            max-height: 80%;
            overflow: auto;
            background: rgba(0, 0, 0, 0.5);
            border-top-left-radius: 15px;
            border-top-right-radius: 15px;
            padding: 0px 10px 10px 10px;
            transform: translateY(calc(100% - 60px));
            transition: all .3s ease;
            color: #f3f3f3;
            user-select: none;
            -webkit-user-select: none;
            /* iPhone X */
            padding-bottom: constant(safe-area-inset-bottom);
            padding-bottom: env(safe-area-inset-bottom);
        }

        .settings.hide {
            opacity: 0;
            visibility: hidden;
        }

        .settings.expand {
            transform: none;

        }

        .settings header {
            display: flex;
            justify-content: center;
            align-items: center;
            height: 20px;
        }

        .settings header .dragger {
            height: 30%;
            width: 30px;
            border-radius: 50px;
            background: #666666;
        }

        .settings .input {
            color: black;
            display: flex;
            align-items: center;
            margin-bottom: 10px
        }

        .settings .input input {
            -webkit-appearance: none;
            border: none;
            outline: none;
            margin: 0;
            height: 35px;
            font-size: 16px;
            padding: 0 15px;
            border-radius: 15px;
            flex: 1;
            margin-right: 10px;
        }

        .settings .input button {
            -webkit-appearance: none;
            border: none;
            font-size: 16px;
            color: #f3f3f3;
            /* height:  */
            background: #4F69F8;
            height: 30px;
            border-radius: 15px;
            border: none;
            outline: none;
        }

        .settings-item-title {
            color: white;
            padding: 10px 5px;
            font-size: 14px;
        }

        .settings-item-content .item.active {
            border: 1px solid white;
            box-shadow: 0px 0px 5px 5px rgba(0, 0, 0, 0.1), 0px 0px 5px 2px rgba(0, 0, 0, 0.2) inset;
        }

        .color .settings-item-content {
            display: flex;
            justify-content: space-around;
            align-items: center;
        }


        input[type="color"] {
            -webkit-appearance: none;
            border: none;
            height: 100%;
            width: 100%;
            padding: 0;
            margin: 0;
        }

        .item-split {
            border-right: 1px solid #e5e5e5ac;
            height: 20px;
        }

        .font-size .settings-item-content {
            display: flex;
            color: white;
            align-items: center;
            justify-content: space-around;
        }

        .item {
            display: flex;
            align-items: center;
            justify-content: center;
            width: 30px;
            height: 30px;
            font-size: 12px;
            overflow: hidden;
            line-height: 12px;
            border-radius: 50%;
            border: 1px solid rgba(255, 255, 255, 0.3);
        }

        .font-size .item {
            border: 1px solid rgba(0, 0, 0, 0.3);
            margin-right: 15px;
            width: 35px;
            height: 35px;
        }

        input[type="range"] {
            flex: 1;
            -webkit-appearance: none;
            height: 20px;
            width: 30%;
            margin: 0;
            border: none;
            color: white;
            background: transparent;
        }

        input[type="range"]::-webkit-slider-thumb {
            -webkit-appearance: none;
            width: 30px;
            height: 30px;
            background-color: #fff;
            border-radius: 50%;
            box-shadow: 0 1px 2px rgba(0, 0, 0, 0.5);
            border: none;
            margin-top: -15px;
        }

        input[type="range"]::focus {
            outline: none;
        }

        input[type="range"]::-webkit-slider-runnable-track {
            cursor: pointer;
            height: 2px;
            background-color: #e5e5e5;
            border-radius: 2px;

        }

        .font-size input {
            margin: 0 5px;
        }

        .speed .settings-item-content {
            color: rgb(43, 41, 41);
            display: flex;
            align-items: center;
        }

        .speed input {
            margin: 0 10px;
        }

        input::placeholder {
            text-align: center;
        }


        .other .settings-item-content {
            display: flex;
            align-items: center;
            justify-content: space-around;
        }

        .toggle-bz {
            cursor: pointer;
            display: flex;
            align-items: center;
        }

        .toggle-bz span {
            margin-right: 5px;
            font-size: 14px;

        }

        .toggle-bz input {
            display: none;
        }

        .toggle-bz i {
            position: relative;
            display: inline-block;
            margin-right: .5rem;
            width: 46px;
            height: 26px;
            background-color: #e6e6e6;
            border-radius: 23px;
            vertical-align: text-bottom;
            transition: all 0.3s linear;
        }

        .toggle-bz i::before {
            content: "";
            position: absolute;
            left: 0;
            width: 42px;
            height: 22px;
            background-color: #fff;
            border-radius: 11px;
            transform: translate3d(2px, 2px, 0) scale3d(1, 1, 1);
            transition: all 0.25s linear;
        }

        .toggle-bz i::after {
            content: "";
            position: absolute;
            left: 0;
            width: 22px;
            height: 22px;
            background-color: #fff;
            border-radius: 11px;
            box-shadow: 0 2px 2px rgba(0, 0, 0, 0.24);
            transform: translate3d(2px, 2px, 0);
            transition: all 0.2s ease-in-out;
        }

        .toggle-bz input:checked+i {
            background-color: #4BD763;
        }

        .toggle-bz input:checked+i::before {
            transform: translate3d(18px, 2px, 0) scale3d(0, 0, 0);
        }

        .toggle-bz input:checked+i::after {
            transform: translate3d(22px, 2px, 0);
        }

        .copyright {
            font-size: 12px;
            color: #B0B0B0;
            margin-top: 15px;
            position: relative;
            line-height: 12px;
            height: 12px;
            /* width: 100%; */
            text-align: center;
        }

        .copyright .child {
            position: absolute;
            margin: auto;
            top: 0;
            right: 0;
            bottom: 0;
            left: 0;
            user-select: none;
            -webkit-user-select: none;

            backface-visibility: hidden;
            -webkit-backface-visibility: hidden;
            transition: transform .5s;
        }


        .copyright .back {
            position: absolute;
            transform: rotateY(180deg);
        }


        .buzheng .back {
            transform: rotateY(0);

        }

        .buzheng .front {
            transform: rotateY(-180deg);
        }

        @supports (bottom: constant(safe-area-inset-bottom)) or (bottom: env(safe-area-inset-bottom)) {
            .settings {
                /* iPhone X */
                padding-bottom: constant(safe-area-inset-bottom);
                padding-bottom: env(safe-area-inset-bottom);
            }
        }
    &lt;/style&gt;
&lt;/head&gt;

&lt;body&gt;
    &lt;div id="container" class="container"&gt;
        &lt;div id="text" class="text"&gt;
        &lt;/div&gt;
    &lt;/div&gt;
    &lt;div id="settings" class="settings"&gt;
        &lt;header id="dragger"&gt;
            &lt;div class="dragger"&gt;&lt;/div&gt;
        &lt;/header&gt;
        &lt;div class="input"&gt;
            &lt;input name="text" placeholder="请输入文字" type="text"&gt;
        &lt;/div&gt;
        &lt;div class="font-size"&gt;
            &lt;div class="settings-item-title"&gt;字体大小&lt;/div&gt;
            &lt;div id="font-size-setting" class="settings-item-content"&gt;
                &lt;div data-color="active" id="font-size-display" class="item active" id="font-size-display"&gt;150px&lt;/div&gt;
                &lt;div style="font-size: 12px;"&gt;小&lt;/div&gt;
                &lt;input min="50" step="2" max="500" name="font-size" type="range"&gt;
                &lt;div style="font-size: 20px"&gt;大&lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
        &lt;div class="speed"&gt;
            &lt;div class="settings-item-title"&gt;滚动速度&lt;/div&gt;
            &lt;div class="settings-item-content"&gt;
                &lt;div class="tip"&gt;🐢&lt;/div&gt;
                &lt;input min="0" max="100" name="speed" type="range"&gt;
                &lt;div class="tip"&gt;🐰&lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
        &lt;div class="settings-item color"&gt;
            &lt;div class="settings-item-title"&gt;文字颜色&lt;/div&gt;
            &lt;div class="settings-item-content" id="text-color-selector"&gt;
                &lt;!-- 插入文本颜色按钮 --&gt;
                &lt;div class="item-split"&gt;&lt;/div&gt;
                &lt;div class="item" id="text-color-display"&gt;&lt;input name="text-color" type="color"&gt;&lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
        &lt;div class="settings-item color"&gt;
            &lt;div class="settings-item-title"&gt;背景颜色&lt;/div&gt;
            &lt;div class="settings-item-content" id="background-color-selector"&gt;
                &lt;!-- 插入背景颜色按钮 --&gt;
                &lt;div class="item-split"&gt;&lt;/div&gt;
                &lt;div class="item" id="background-color-display"&gt;&lt;input name="background-color" type="color"&gt;&lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
        &lt;div class="settings-item other"&gt;
            &lt;div class="settings-item-title"&gt;其他设置&lt;/div&gt;
            &lt;div class="settings-item-content"&gt;
                &lt;label class="toggle-bz"&gt;
                    &lt;span&gt;荧光&lt;/span&gt;
                    &lt;input name="shine" type="checkbox"&gt;
                    &lt;i&gt;&lt;/i&gt;
                &lt;/label&gt;
                &lt;label class="toggle-bz"&gt;
                    &lt;span&gt;闪烁&lt;/span&gt;
                    &lt;input name="twinkling" type="checkbox"&gt;
                    &lt;i&gt;&lt;/i&gt;
                &lt;/label&gt;
                &lt;label class="toggle-bz"&gt;
                    &lt;span&gt;反向&lt;/span&gt;
                    &lt;input name="reverse-direction" type="checkbox"&gt;
                    &lt;i&gt;&lt;/i&gt;
                &lt;/label&gt;
            &lt;/div&gt;
        &lt;/div&gt;
        &lt;div id="buzheng" class="copyright"&gt;
            &lt;div class="child front"&gt;Build for you with &lt;span style="color:#e25555;"&gt;❤&lt;/span&gt;&lt;/div&gt;
            &lt;div class="child back"&gt;找捷径就上捷径商店 https://jiejing.store&lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;


    &lt;script&gt;
        class Marquee {
            constructor(text) {
                this.text = text;
                this.fontSize = 150;
                this.textColor = '#fff';
                this.backgroundColor = '#000';
                this.speed = 25;
                this.shine = false;
                this.twinkling = false;
                this.reverseDirection = false;
                this.portrait = true;
                this.speedRate = 200;
                this.settingsPanelExpand = false;
                this.colorMap = [
                    '#fff',
                    '#FF0000',
                    '#0033CC',
                    '#FF9900',
                    '#00CC00',
                    '#000'
                ]
                // Elements 
                this.settingsElement = document.getElementById('settings');
                this.dragger = document.getElementById('dragger');
                this.container = document.getElementById('container');

                this.textElement = document.getElementById('text');
                this.textInput = document.getElementsByName('text')[0];

                this.sumbitButton = document.getElementById('submit');

                this.fontSizeDisplay = document.getElementById('font-size-display');
                this.fontSizeInput = document.getElementsByName('font-size')[0];

                this.textColorSelector = document.getElementById('text-color-selector');
                this.backgroundColorSelector = document.getElementById('background-color-selector');

                this.textColorInput = document.getElementsByName('text-color')[0];
                this.backgroundColorInput = document.getElementsByName('background-color')[0];
                console.log('Welcome to use Buzheng\'s Shortcuts!');
                this.textColorDisplay = document.getElementById('text-color-display');
                this.backgroundColorDisplay = document.getElementById('background-color-display');
                this.speedInput = document.getElementsByName('speed')[0];
                this.shineSwitcher = document.getElementsByName('shine')[0];
                this.twinklingSwitcher = document.getElementsByName('twinkling')[0];
                this.reverseDirectionSwitcher = document.getElementsByName('reverse-direction')[0];
                this.buzheng = document.getElementById('buzheng');

                this.textChangeCallback = this.textChange.bind(this);

                // fontSize change callback
                this.fontSizeChangeCallback = this.fontSizeChange.bind(this);
                this.speedChangeCallback = this.speedChange.bind(this);
                // color change callback
                this.textColorChangeCallback = this.textColorChange.bind(this);
                this.textColorInputChangeCallback = this.textColorInputChange.bind(this);
                this.backgroundColorChangeCallback = this.backgroundColorChange.bind(this);
                this.backgroundColorInputChangeCallback = this.backgroundColorInputChange.bind(this);
                // other Settings
                this.shineChangeCallback = this.shineChange.bind(this);
                this.twinklingChangeCallback = this.twinklingChange.bind(this);
                this.reverseDirectionChangeCallback = this.reverseDirectionChange.bind(this);
                this.settingsPanelExpandChangeCallback = this.settingsPanelExpandChange.bind(this);
                this.orientationChangeCallback = this.orientationChange.bind(this);
                this.settingsShowChangeCallback = this.settingsShowChange.bind(this);
                this.buzhengChangeCallback = this.buzhengChange.bind(this);

            }

            init() {
                this.fontSizeInput.value = this.fontSize + 'px';
                this.textElement.style.setProperty('font-size', this.fontSize + 'px')
                this.textElement.innerText = this.text;
                this.speedInput.value = this.speed;
                this.textInput.value = this.text;
                this.textColorSelector.insertAdjacentHTML('afterbegin', this.createColorItems());
                this.backgroundColorSelector.insertAdjacentHTML('afterbegin', this.createColorItems('background'));
                this.portrait = window.orientation === 0 ? true : false;
                this.bindEvents();
                this._setAnimation();
                this._resetTextElemment();
            }





            createColorItems(prop = 'color') {
                const colorArray = prop === 'color' ? this.colorMap : this.colorMap.reverse();

                return colorArray.reduce(
                    (acc, cur, idx) =&gt; `${acc}&lt;div data-color="${cur}" class="item${idx === 0 ? ' active' : ''}" style="background:${cur}"&gt;&lt;/div&gt;\n`, '\n'
                );
            }


            bindEvents() {
                this.textInput.addEventListener('change', this.textChangeCallback);
                // fontSize Change
                this.fontSizeInput.addEventListener('change', this.fontSizeChangeCallback);
                this.speedInput.addEventListener('change', this.speedChangeCallback);
                // color Change
                this.textColorInput.addEventListener('change', this.textColorInputChangeCallback);
                this.backgroundColorInput.addEventListener('change', this.backgroundColorInputChangeCallback);
                this.textColorSelector.addEventListener('click', this.textColorChangeCallback);
                this.backgroundColorSelector.addEventListener('click', this.backgroundColorChangeCallback);
                this.shineSwitcher.addEventListener('change', this.shineChangeCallback);
                this.twinklingSwitcher.addEventListener('change', this.twinklingChangeCallback);
                this.reverseDirectionSwitcher.addEventListener('change', this.reverseDirectionChangeCallback);
                this.dragger.addEventListener('click', this.settingsPanelExpandChangeCallback);
                this.container.addEventListener('click', this.settingsShowChangeCallback);
                this.buzheng.addEventListener('click', this.buzhengChangeCallback);

                window.addEventListener("orientationchange", this.orientationChangeCallback);
            }

            // 是否荧光
            shineChange(event) {
                this.shine = event.target.checked;
                this._setShine();

            }


            settingsShowChange() {
                if (!this.settingsPanelExpand) {

                    this.settingsElement.classList.toggle('hide');
                }

            }

            _setShine() {
                if (this.shine) {
                    this.textElement.style.setProperty('text-shadow', '0 0 20px ' + this.textColor);
                }
                else {
                    this.textElement.style.removeProperty('text-shadow');
                }
            }

            twinklingChange(event) {
                this.twinkling = event.target.checked;
                this._setAnimation();
            }
            reverseDirectionChange(event) {

                this.reverseDirection = event.target.checked;
                this._setAnimation();

            }

            buzhengChange() {
                this.buzheng.classList.toggle('buzheng');

            }

            orientationChange(event) {
                const value = event.target.orientation;
                if (value === 0) {
                    this.portrait = true;
                    this.textElement.style.setProperty("transform", "rotate(0.25turn)");
                } else {
                    this.portrait = false;
                    this.textElement.style.removeProperty("transform");
                }
                this._setAnimation();
            }

            // 设置面板是否展开
            settingsPanelExpandChange(event) {
                this.settingsPanelExpand = !this.settingsPanelExpand;
                this.settingsElement.classList.toggle('expand');
            }

            fontSizeChange(event) {
                const size = event.target.value;
                this.fontSize = size;
                this.fontSizeDisplay.innerText = size + "px";
                this.textElement.style.setProperty("font-size", size + "px");
                this._resetTextElemment();
            }
            speedChange(event) {
                this.speed = +event.target.value;

                // 更新动画
                this._setAnimation();

            }
            // 文字改变 需要更新动画
            textChange(event) {
                const text = event.target.value;
                this.text = text.replace(/[\r\n]/g, '');
                this.textElement.innerText = event.target.value;
                this._setAnimation();
            }

            textColorInputChange(event) {
                this.textColor = event.target.value;
                this._setColor('color', true)
            }

            textColorChange(event) {
                const color = event.target.dataset.color
                if (!color) {
                    return;
                }
                this.textColor = color;
                this._setColor()
            }

            backgroundColorInputChange(event) {
                this.backgroundColor = event.target.value;
                this._setColor('background', true)
            }

            backgroundColorChange(event) {
                const color = event.target.dataset.color
                if (!color) {
                    return;
                }
                this.backgroundColor = color;
                this._setColor('background')
            }

            /* 1. text 由于其长度会影响动画。
               2. speed 肯定会影响动画
               3. shine 要添加一个动画
               4. 屏幕旋转方向，需要改变 transform
            */
            get textAnimation() {
                let keyframes = this.portrait ? 'marqueen' : 'marqueen-landscape';

                let time;

                if (this.speed === 0) {
                    time = 0;
                    if (window.orientation !== 0) {
                        this.textElement.style.setProperty('transform','rotate(0)');
                    }
                } else {
                    time = Math.round((100 - this.speed) * this.speedRate + this.text.length * 20);
                }

                let animation = `${keyframes} ${time}ms linear 0ms infinite${this.reverseDirection ? ' reverse' : ''}`;
                if (this.twinkling) {
                    animation += ',twinkling 200ms ease infinite'
                }
                return animation;
            }

            _resetTextElemment() {
                this.textElement.style.removeProperty('animation');

                this.textElement = this.container.removeChild(this.textElement);
                this.textElement.style.setProperty('animation', this.textAnimation);
                this.container.appendChild(this.textElement)

            }

            _setAnimation() {
                this._resetTextElemment();
            }


            _setColor(prop = 'color', input = false) {
                let selector;
                let element;
                let display;
                let colorValue;
                if (prop === 'color') {
                    selector = this.textColorSelector;
                    element = this.textElement;
                    display = this.textColorDisplay;
                    colorValue = this.textColor;

                } else {
                    selector = this.backgroundColorSelector;
                    element = this.container
                    display = this.backgroundColorDisplay;
                    colorValue = this.backgroundColor;
                }
                display.classList.toggle('active', input);
                for (let child of selector.children) {
                    if (!child.dataset.color) {
                        continue;
                    }
                    child.classList.toggle('active', child.dataset.color === colorValue)
                }
                element.style.setProperty(prop, colorValue);
                this._setShine();
            }
        }
        const marquee = new Marquee(text);
        marquee.init();

    &lt;/script&gt;
&lt;/body&gt;

&lt;/html&gt;</string>
			</dict>
		</dict>
		<dict>
			<key>WFWorkflowActionIdentifier</key>
			<string>is.workflow.actions.getrichtextfromhtml</string>
			<key>WFWorkflowActionParameters</key>
			<dict>
				<key>UUID</key>
				<string>7976A784-CAD1-487A-AE94-C53F8F74B6C2</string>
				<key>WFHTML</key>
				<dict>
					<key>Value</key>
					<dict>
						<key>OutputName</key>
						<string>文本</string>
						<key>OutputUUID</key>
						<string>4161C9F4-FC1C-48B6-AEFC-B4835B2E3C33</string>
						<key>Type</key>
						<string>ActionOutput</string>
					</dict>
					<key>WFSerializationType</key>
					<string>WFTextTokenAttachment</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>WFWorkflowActionIdentifier</key>
			<string>is.workflow.actions.showwebpage</string>
			<key>WFWorkflowActionParameters</key>
			<dict>
				<key>WFURL</key>
				<dict>
					<key>Value</key>
					<dict>
						<key>attachmentsByRange</key>
						<dict>
							<key>{0, 1}</key>
							<dict>
								<key>OutputName</key>
								<string>来自HTML的多信息文本</string>
								<key>OutputUUID</key>
								<string>7976A784-CAD1-487A-AE94-C53F8F74B6C2</string>
								<key>Type</key>
								<string>ActionOutput</string>
							</dict>
						</dict>
						<key>string</key>
						<string>￼</string>
					</dict>
					<key>WFSerializationType</key>
					<string>WFTextTokenString</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>WFWorkflowActionIdentifier</key>
			<string>is.workflow.actions.choosefrommenu</string>
			<key>WFWorkflowActionParameters</key>
			<dict>
				<key>GroupingIdentifier</key>
				<string>5672D10A-0A5D-4254-B941-346CC6BBAFF7</string>
				<key>WFControlFlowMode</key>
				<integer>1</integer>
				<key>WFMenuItemTitle</key>
				<string>开年大吉</string>
			</dict>
		</dict>
		<dict>
			<key>WFWorkflowActionIdentifier</key>
			<string>is.workflow.actions.gettext</string>
			<key>WFWorkflowActionParameters</key>
			<dict>
				<key>UUID</key>
				<string>A5987D22-C97B-4F64-A2F7-0B878DB0DBA8</string>
				<key>WFTextActionText</key>
				<string>aHR0cHM6Ly9jLnRiLmNuL1c0Lml2bVhmP2Rpc2FibGVOYXY9WUVT</string>
			</dict>
		</dict>
		<dict>
			<key>WFWorkflowActionIdentifier</key>
			<string>is.workflow.actions.base64encode</string>
			<key>WFWorkflowActionParameters</key>
			<dict>
				<key>UUID</key>
				<string>336E0899-19E2-47A2-8684-35A47D95F7BC</string>
				<key>WFBase64LineBreakMode</key>
				<string>Every 64 Characters</string>
				<key>WFEncodeMode</key>
				<string>Decode</string>
				<key>WFInput</key>
				<dict>
					<key>Value</key>
					<dict>
						<key>OutputName</key>
						<string>文本</string>
						<key>OutputUUID</key>
						<string>A5987D22-C97B-4F64-A2F7-0B878DB0DBA8</string>
						<key>Type</key>
						<string>ActionOutput</string>
					</dict>
					<key>WFSerializationType</key>
					<string>WFTextTokenAttachment</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>WFWorkflowActionIdentifier</key>
			<string>is.workflow.actions.openurl</string>
			<key>WFWorkflowActionParameters</key>
			<dict>
				<key>WFInput</key>
				<dict>
					<key>Value</key>
					<dict>
						<key>OutputName</key>
						<string>Base64已编码内容</string>
						<key>OutputUUID</key>
						<string>336E0899-19E2-47A2-8684-35A47D95F7BC</string>
						<key>Type</key>
						<string>ActionOutput</string>
					</dict>
					<key>WFSerializationType</key>
					<string>WFTextTokenAttachment</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>WFWorkflowActionIdentifier</key>
			<string>is.workflow.actions.choosefrommenu</string>
			<key>WFWorkflowActionParameters</key>
			<dict>
				<key>GroupingIdentifier</key>
				<string>5672D10A-0A5D-4254-B941-346CC6BBAFF7</string>
				<key>WFControlFlowMode</key>
				<integer>1</integer>
				<key>WFMenuItemTitle</key>
				<string>这个春节花呗免费陪你一起过</string>
			</dict>
		</dict>
		<dict>
			<key>WFWorkflowActionIdentifier</key>
			<string>is.workflow.actions.gettext</string>
			<key>WFWorkflowActionParameters</key>
			<dict>
				<key>UUID</key>
				<string>14D6A417-FBE3-4F25-A5AB-48B21F578459</string>
				<key>WFTextActionText</key>
				<string>YWxpcGF5czovL3BsYXRmb3JtYXBpL3N0YXJ0YXBwP3NhSWQ9MTAwMDAwMDcmcXJjb2RlPSBodHRw
czovL3FyLmFsaXBheS5jb20vMDQzMTIwMTBra3FjbXFjZ2J6YnVtMzQ=</string>
			</dict>
		</dict>
		<dict>
			<key>WFWorkflowActionIdentifier</key>
			<string>is.workflow.actions.base64encode</string>
			<key>WFWorkflowActionParameters</key>
			<dict>
				<key>UUID</key>
				<string>FA97D047-7E53-498B-8233-3E4697D6FAF4</string>
				<key>WFEncodeMode</key>
				<string>Decode</string>
				<key>WFInput</key>
				<dict>
					<key>Value</key>
					<dict>
						<key>OutputName</key>
						<string>文本</string>
						<key>OutputUUID</key>
						<string>14D6A417-FBE3-4F25-A5AB-48B21F578459</string>
						<key>Type</key>
						<string>ActionOutput</string>
					</dict>
					<key>WFSerializationType</key>
					<string>WFTextTokenAttachment</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>WFWorkflowActionIdentifier</key>
			<string>is.workflow.actions.url</string>
			<key>WFWorkflowActionParameters</key>
			<dict>
				<key>UUID</key>
				<string>67E47E8C-CE83-432D-9ECE-27438CA2154B</string>
				<key>WFURLActionURL</key>
				<dict>
					<key>Value</key>
					<dict>
						<key>attachmentsByRange</key>
						<dict>
							<key>{0, 1}</key>
							<dict>
								<key>OutputName</key>
								<string>Base64已编码内容</string>
								<key>OutputUUID</key>
								<string>FA97D047-7E53-498B-8233-3E4697D6FAF4</string>
								<key>Type</key>
								<string>ActionOutput</string>
							</dict>
						</dict>
						<key>string</key>
						<string>￼</string>
					</dict>
					<key>WFSerializationType</key>
					<string>WFTextTokenString</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>WFWorkflowActionIdentifier</key>
			<string>is.workflow.actions.openurl</string>
			<key>WFWorkflowActionParameters</key>
			<dict>
				<key>WFInput</key>
				<dict>
					<key>Value</key>
					<dict>
						<key>OutputName</key>
						<string>URL</string>
						<key>OutputUUID</key>
						<string>67E47E8C-CE83-432D-9ECE-27438CA2154B</string>
						<key>Type</key>
						<string>ActionOutput</string>
					</dict>
					<key>WFSerializationType</key>
					<string>WFTextTokenAttachment</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>WFWorkflowActionIdentifier</key>
			<string>is.workflow.actions.choosefrommenu</string>
			<key>WFWorkflowActionParameters</key>
			<dict>
				<key>GroupingIdentifier</key>
				<string>5672D10A-0A5D-4254-B941-346CC6BBAFF7</string>
				<key>UUID</key>
				<string>9CEE6B1E-48FA-4F11-9DF9-8DC48479B5E1</string>
				<key>WFControlFlowMode</key>
				<integer>2</integer>
			</dict>
		</dict>
		<dict>
			<key>WFWorkflowActionIdentifier</key>
			<string>is.workflow.actions.repeat.count</string>
			<key>WFWorkflowActionParameters</key>
			<dict>
				<key>GroupingIdentifier</key>
				<string>554C9445-9E9D-4F06-B517-3F794D69B01A</string>
				<key>WFControlFlowMode</key>
				<integer>2</integer>
			</dict>
		</dict>
	</array>
	<key>WFWorkflowClientRelease</key>
	<string>3.0</string>
	<key>WFWorkflowClientVersion</key>
	<string>1050.22</string>
	<key>WFWorkflowIcon</key>
	<dict>
		<key>WFWorkflowIconGlyphNumber</key>
		<integer>59841</integer>
		<key>WFWorkflowIconStartColor</key>
		<integer>4282601983</integer>
	</dict>
	<key>WFWorkflowImportQuestions</key>
	<array/>
	<key>WFWorkflowInputContentItemClasses</key>
	<array>
		<string>WFAppStoreAppContentItem</string>
		<string>WFArticleContentItem</string>
		<string>WFContactContentItem</string>
		<string>WFDateContentItem</string>
		<string>WFEmailAddressContentItem</string>
		<string>WFGenericFileContentItem</string>
		<string>WFImageContentItem</string>
		<string>WFiTunesProductContentItem</string>
		<string>WFLocationContentItem</string>
		<string>WFDCMapsLinkContentItem</string>
		<string>WFAVAssetContentItem</string>
		<string>WFPDFContentItem</string>
		<string>WFPhoneNumberContentItem</string>
		<string>WFRichTextContentItem</string>
		<string>WFSafariWebPageContentItem</string>
		<string>WFStringContentItem</string>
		<string>WFURLContentItem</string>
	</array>
	<key>WFWorkflowMinimumClientVersion</key>
	<integer>900</integer>
	<key>WFWorkflowMinimumClientVersionString</key>
	<string>900</string>
	<key>WFWorkflowTypes</key>
	<array>
		<string>NCWidget</string>
		<string>WatchKit</string>
	</array>
</dict>
</plist>
